{"version":3,"sources":["images/github.svg","images/twitter.svg","images/linkedin.svg","DrumPad.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DrumPad","props","react_default","a","createElement","className","id","clipId","onClick","keyTrigger","src","url","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","drum","sound","playSound","bind","assertThisInitialized","handleKeyPress","handleClick","document","addEventListener","removeEventListener","trigger","getElementById","play","setState","e","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","value","keyCode","err","return","_this2","drumpad","forEach","push","src_DrumPad","key","href","target","rel","github","alt","twitter","linkedin","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.901fc64b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.c9f12008.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.4b475fb3.svg\";","import React from \"react\";\n\nfunction DrumPad(props) {\n  return (\n    <div\n      className=\"col-4 bg-info text-center drum-pad py-4 px-4 border font-weight-bold\"\n      id={props.clipId}\n      onClick={() => props.onClick(props.clipId, props.keyTrigger)}\n    >\n        <audio src={props.url} className=\"clip\" id={props.keyTrigger}/>\n      {props.keyTrigger}\n    </div>\n  );\n}\n\nexport default DrumPad;\n","import React from \"react\";\nimport \"./App.css\";\nimport github from \"./images/github.svg\";\nimport twitter from \"./images/twitter.svg\";\nimport linkedin from \"./images/linkedin.svg\";\nimport DrumPad from \"./DrumPad.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drum: drum,\n      sound: \"\"\n    };\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n  playSound(id, trigger) {\n    const sound = document.getElementById(trigger);\n    const active = document.getElementById(id);\n    sound.play();\n    \n    this.setState({\n      sound: id\n    });\n  }\n  handleClick(id, trigger) {\n    this.playSound(id, trigger);\n  }\n  handleKeyPress(e) {\n    for (let i of this.state.drum) {\n      if (e.keyCode === i.keyCode) {\n        this.playSound(i.id, i.keyTrigger);\n      }\n    }\n  }\n  render() {\n    const drumpad = [];\n    this.state.drum.forEach(e => {\n      drumpad.push(\n        <DrumPad\n          key={e.keyCode}\n          keyCode={e.keyCode}\n          clipId={e.id}\n          keyTrigger={e.keyTrigger}\n          url={e.url}\n          onClick={this.handleClick}\n        />\n      );\n    });\n    return (\n      <div className=\"app container w-50 mt-5\" id=\"drum-machine\">\n        <div className=\"row p-0 m-0\">{drumpad}</div>\n        <div\n          className=\"container row d-flex justify-content-center align-items-center border text-center font-weight-bold p-0 m-0\"\n          id=\"display\"\n        >\n          {this.state.sound}\n        </div>\n        <div className=\"text-center\">\n          <p className=\"m-0 mt-2\">Made by Jeff</p>\n          <span>\n            <a\n              href=\"https://github.com/jeffogah\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"icon mx-2\" src={github} alt=\"github\" />\n            </a>\n          </span>\n          <span>\n            <a\n              href=\"https://twitter.com/jeff_ogah\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"icon mx-1\" src={twitter} alt=\"twitter\" />\n            </a>\n          </span>\n          <span>\n            <a\n              href=\"https://www.linkedin.com/in/jeffrey-ogah-55472216a/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"icon mx-1\" src={linkedin} alt=\"linkedin\" />\n            </a>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n\nconst drum = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Chord-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Chord-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Chord-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Punchy-Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\n  }\n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}